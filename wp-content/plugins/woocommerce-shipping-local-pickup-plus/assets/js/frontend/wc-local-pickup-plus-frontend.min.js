"use strict";
(function() {
	jQuery(document).ready(function(d) {
		var _, n, e, a, c, o, p, i, l, t, r, k, f;
		return f = null != (t = window.wc_local_pickup_plus_frontend) ? t : {}, i = function(t) {
			return !!t && (t.is(".processing") || t.parents(".processing").length)
		}, _ = function(t) {
			if (t && !i(t)) return t.addClass("processing").block({
				message: null,
				overlayCSS: {
					background: "#fff",
					opacity: .6
				}
			})
		}, k = function(t) {
			if (t) return t.removeClass("processing").unblock()
		}, a = function() {
			var i, c, o, t;
			return t = d("#wc-local-pickup-plus-toggle-default-handling").find("a.toggle-default-handling"), i = "3.5.3" === f.select2_version ? d("div.woocommerce > form") : d("form.woocommerce-cart-form"), c = d("div.cart_totals"), o = d("#order_review"), t.on("click", function(t) {
				var e, a;
				return t.preventDefault(), _(i), _(c), _(o), e = d(this).hasClass("pickup") ? "pickup" : "ship", a = {
					action: "wc_local_pickup_plus_set_default_handling",
					security: f.set_default_handling_nonce,
					handling: e
				}, d.post(f.ajax_url, a, function(t) {
					if (t.success)
						if (f.is_checkout) {
							if (l() && n(), d(document.body).trigger("update_checkout"), f.apply_pickup_location_tax) return location.reload()
						} else d(document).trigger("wc_update_cart");
					else console.log(t);
					return k(i), k(c), k(o)
				})
			})
		}, l = function() {
			var t, e, a, i;
			return i = d("#shipping_state").val(), a = d("input#shipping_postcode").val(), e = d("#shipping_city").val(), t = d("input#shipping_address_1").val(), "" === i && "" === a && "" === e && "" === t
		}, n = function() {
			return d("#shipping_state").val(d("#billing_state").val()), d("input#shipping_postcode").val(d("input#billing_postcode").val()), d("#shipping_city").val(d("#billing_city").val()), d("input#shipping_address_1").val(d("input#billing_address_1").val())
		}, e = function(t) {
			var e, a;
			return t.id ? (a = e = "", t.name && t.address ? (a = t.name, e = t.address) : d(t.element) && (a = d(t.element).data("name"), e = d(t.element).data("address")), "" !== a ? d('<div id="wc-local-pickup-plus-pickup-location-option-' + t.id + '" class="wc-local-pickup-plus-pickup-location-option"><span class="wc-location-pickup-plus-pickup-location-option-name" style="display:block;">' + a + '</span><small class="wc-location-pickup-plus-pickup-location-option-address" style="display:inline-block;">' + e + "</small></div>") : t.text) : t.text ? t.text : ""
		}, c = function() {
			var t;
			return d("a.enable-local-pickup, a.disable-local-pickup").on("click", function(t) {
				var e, a, i, c, o, n, p, l, r, u;
				return t.preventDefault(), i = d(this).parent().parent(), e = "3.5.3" === f.select2_version ? d("div.woocommerce > form") : d("form.woocommerce-cart-form"), a = d("#order_review"), d(this).hasClass("enable-local-pickup") ? (l = "pickup", i.find("a.enable-local-pickup").parent().hide(), i.find("a.disable-local-pickup").parent().show(), i.find("> div").show()) : (l = "ship", i.find("a.enable-local-pickup").parent().show(), i.find("a.disable-local-pickup").parent().hide(), i.find("> div").hide()), _(e), _(a), c = i.find(".pickup-location-lookup-area"), (r = (u = (n = i.find(".pickup-location-lookup")).attr("data-single-pickup-location")) && 0 < parseInt(u, 10) ? u : n.val()) || "per-order" !== f.pickup_selection_mode || (r = (o = d('[name="shipping_method_pickup_location_id[0]"]')).length ? o.val() : r), p = {
					action: "wc_local_pickup_plus_set_cart_item_handling",
					security: f.set_cart_item_handling_nonce,
					cart_item_key: i.data("pickup-object-id"),
					pickup_data: {
						handling: l,
						lookup_area: c.val(),
						pickup_location_id: r
					}
				}, d.post(f.ajax_url, p, function(t) {
					return "per-order" === f.pickup_selection_mode && d(".pickup-location-lookup").trigger("change"), k(e), k(a), t.success ? f.is_cart ? d(document).trigger("wc_update_cart") : f.is_checkout ? d(document.body).trigger("update_checkout") : void 0 : console.log(t)
				})
			}), d(".pickup-location-change-lookup-area").on("click", function(t) {
				return t.preventDefault(), d(this).closest("div.pickup-location-lookup-area-field").find("> div").toggle()
			}), (t = d("select.pickup-location-lookup-area")).select2(), t.on("change", function() {
				var e, a, t, i, c, o, n, p, l, r, u, s;
				if (p = d(this).closest(".pickup-location-lookup-area-field").data("pickup-object-id"), !d("#pickup-location-field-for-" + p).find("a.enable-local-pickup").is(":visible") && (i = d("#pickup-location-lookup-area-field-for-" + p).find("em.pickup-location-current-lookup-area-label"), l = d(this).select2("data"), e = "3.5.3" === f.select2_version ? d("div.woocommerce > form") : d("form.woocommerce-cart-form"), a = d("#order_review"), l && ("3.5.3" === f.select2_version ? i.text(l.text) : l[0] && l[0].text && i.text(l[0].text)), !1 === f.select2_version && (_(e), _(a)), o = d("#pickup-location-field-for-" + p), u = (c = "3.5.3" === f.select2_version ? o.find(".pickup-location-lookup-data") : o.find(".pickup-location-lookup")).data("pickup-object-type"), r = (s = c.attr("data-single-pickup-location")) && 0 < parseInt(s, 10) ? s : c.val(), "cart-item" === u ? n = {
						action: "wc_local_pickup_plus_set_cart_item_handling",
						security: f.set_cart_item_handling_nonce,
						cart_item_key: p,
						pickup_data: {
							handling: "pickup",
							lookup_area: d(this).val(),
							pickup_location_id: r
						}
					} : "package" === u && (t = d("#wc-local-pickup-plus-datepicker-" + p), n = {
						action: "wc_local_pickup_plus_set_package_handling",
						security: f.set_package_handling_nonce,
						package_id: p,
						lookup_area: d(this).val(),
						pickup_location_id: r
					}, t.length && t.val() && (n.pickup_date = t.val())), n)) return d.post(f.ajax_url, n, function(t) {
					return k(e), k(a), t.success ? f.is_cart ? d(document).trigger("wc_update_cart") : f.is_checkout ? d(document.body).trigger("update_checkout") : void 0 : console.log(t)
				})
			})
		}, o = function() {
			var c, o;
			return o = function(t, e, a) {
				var i, c, o, n;
				return t = t ? t.toLowerCase() : "", e = e ? e.toLowerCase() : "", o = !1, t && (e && -1 < e.indexOf(t) && (o = !0), !o && a && ("3.5.3" === f.select2_version ? (n = String(d(a.context).data("postcode")), c = d(a.context).data("city"), i = d(a.context).data("address")) : (n = String(d(a.element).data("postcode")), c = d(a.element).data("city"), i = d(a.element).data("address")), n && -1 < n.toLowerCase().indexOf(t) && (o = !0), !o && c && -1 < c.toLowerCase().indexOf(t) && (o = !0), !o && i && -1 < i.toLowerCase().indexOf(t) && (o = !0))), o
			}, "3.5.3" === f.select2_version ? f.use_enhanced_search ? (c = d("input.pickup-location-lookup")).select2({
				initSelection: function(t, e) {
					var a, i;
					return "" !== (i = t.val()) ? (a = {
						action: "wc_local_pickup_plus_get_pickup_location_name",
						security: f.get_pickup_location_name_nonce,
						id: i
					}, d.post(f.ajax_url, a, function(t) {

						if (t && t.success && t.data) return e({
							id: i,
							text: t.data
						})
					})) : e({
						text: c.data("placeholder")
					})
				},
				minimumInputLength: 2,
				formatInputTooShort: function() {
					return f.i18n.search_type_minimum_characters
				},
				ajax: {
					url: f.ajax_url,
					cache: !1,
					dataType: "json",
					quietMillis: 250,
					data: function(t, e) {
						var a, i, c;
						return c = d(this).data("product-id"), i = d(this).data("pickup-object-id"), {
							term: t,
							area: (a = d(this).parent().find("#pickup-location-lookup-area-for-" + i)) ? a.find("option:selected").val() : "",
							cart_item_id: i,
							product_id: c,
							page: e,
							security: f.pickup_locations_lookup_nonce,
							action: "wc_local_pickup_plus_pickup_locations_lookup"
						}
					},
					results: function(t) {
						var e;

						jQuery( ".select2-selection" ).click(function() {

							if(jQuery('html').attr('lang')=='vi'){
								if(jQuery('body').hasClass('woocommerce-checkout') || jQuery('body').hasClass('woocommerce-cart'))
								{
									jQuery('.select2-results__message').html('Gõ 2 ký tự của tên đường hoặc quận để tìm cửa hàng.');
								}
							}
							else{
								if(jQuery('body').hasClass('woocommerce-checkout') || jQuery('body').hasClass('woocommerce-cart'))
								{
									jQuery('.select2-results__message').html('Please enter 2 or more characters.');
								}
							}

						});


						return e = {
							text: "text",
							results: []
						}, t.success && t.success && t.data ? {
							text: "text",
							results: t.data
						} : e
					}
				}
			}) : (c = d("select.pickup-location-lookup")).select2({
				matcher: function(t, e, a) {
					var i;
					return i = !0, t && (i = o(t, e, a)), i
				}
			}) : (c = d("select.pickup-location-lookup"), f.use_enhanced_search ? c.select2({
				initSelection: function(t, e) {
					var a, i;
					return "" !== (i = t.val()) ? (a = {
						action: "wc_local_pickup_plus_get_pickup_location_name",
						security: f.get_pickup_location_name_nonce,
						id: i
					}, d.post(f.ajax_url, a, function(t) {

						jQuery( ".select2-selection" ).click(function() {

							if(jQuery('html').attr('lang')=='vi'){
								if(jQuery('body').hasClass('woocommerce-checkout') || jQuery('body').hasClass('woocommerce-cart'))
								{
									jQuery('.select2-results__message').html('Gõ 2 ký tự của tên đường hoặc quận để tìm cửa hàng.');
								}
							}
							else{
								if(jQuery('body').hasClass('woocommerce-checkout') || jQuery('body').hasClass('woocommerce-cart'))
								{
									jQuery('.select2-results__message').html('Please enter 2 or more characters.');
								}
							}

						});

						if (t && t.success && t.data) return e({
							id: i,
							text: t.data
						})
					})) : e({
						text: c.data("placeholder")
					})
				},
				minimumInputLength: 2,
				formatInputTooShort: function() {
					return f.i18n.search_type_minimum_characters
				},
				templateResult: e,
				ajax: {
					url: f.ajax_url,
					cache: !1,
					dataType: "json",
					delay: 250,
					data: function(t) {
						var e, a, i;
						return i = d(this).data("product-id"), a = d(this).data("pickup-object-id"), e = d(this).parent().find("#pickup-location-lookup-area-for-" + a), {
							term: t.term,
							area: e ? e.find("option:selected").val() : "",
							cart_item_id: a,
							product_id: i,
							page: t.page,
							security: f.pickup_locations_lookup_nonce,
							action: "wc_local_pickup_plus_pickup_locations_lookup"
						}
					},
					processResults: function(t, e) {
						return {
							results: t && t.success && t.data ? t.data : []
						}
					}
				}
			}) : d.fn.select2.amd.require(["select2/compat/matcher"], function(t) {
				return c.select2({
					templateResult: e,
					matcher: t(o)
				})
			})), c.on("change", function(t) {
				var e, a, i, c, o, n, p;
				if (e = "3.5.3" === f.select2_version ? d("div.woocommerce > form") : d("form.woocommerce-cart-form, div.cart_totals"), a = d("#order_review"), _(e), _(a), n = d(this).data("pickup-object-type"), p = d(this).data("pickup-object-id"), c = d(this).val(), o = d("#pickup-location-lookup-area-for-" + p).val(), "cart-item" === n ? i = {
						action: "wc_local_pickup_plus_set_cart_item_handling",
						security: f.set_cart_item_handling_nonce,
						cart_item_key: p,
						pickup_data: {
							handling: "pickup",
							lookup_area: o,
							pickup_location_id: c
						}
					} : "package" === n && (i = {
						action: "wc_local_pickup_plus_set_package_handling",
						security: f.set_package_handling_nonce,
						package_id: p,
						lookup_area: o,
						pickup_location_id: c
					}), i) return d.post(f.ajax_url, i, function(t) {
					return k(e), k(a), t.success ? f.is_cart ? d(document).trigger("wc_update_cart") : f.is_checkout ? d(document.body).trigger("update_checkout") : void 0 : console.log(t)
				})
			})
		}, r = function() {
			var t;
			if (!f.display_shipping_address_fields) return (t = parseInt(d("#wc-local-pickup-plus-packages-to-ship").val(), 10)) < parseInt(d("#wc-local-pickup-plus-packages-to-pickup").val(), 10) && 0 === t ? (d("#shiptobilling, #ship-to-different-address").hide(), d("#shiptobilling, #ship-to-different-address").parent().find("h3").hide(), d("#ship-to-different-address input").removeAttr("checked"), d(".shipping_address").hide()) : (d("#shiptobilling, #ship-to-different-address").show(), d("#shiptobilling, #ship-to-different-address").parent().find("h3").show(), "shipping" === f.ship_to_destination ? (d("#ship-to-different-address input").attr("checked", !0), d(".shipping_address").show()) : void 0)
		}, (p = function() {
			return d(".wc-lpp-help-tip").each(function() {
				return d(this).tipTip({
					content: d(this).data("tip"),
					keepAlive: !0,
					edgeOffset: 2
				})
			})
		})(), a(), c(), o(), "undefined" != typeof wc_checkout_params && r(), d(document.body).on("updated_checkout", function() {
			var t, i;
			return i = function(o, t) {
				var e, n, a, i, c, p, l, r, u, s = 2 < arguments.length && void 0 !== arguments[2] && arguments[2];
				if (n = o.find("input.pickup-location-appointment-date"), e = o.find("input.pickup-location-appointment-date-alt"), i = n.val(), p = n.data("location-id"), l = n.data("package-id"), c = "" !== i ? new Date(i) : t.default_date && "" !== t.default_date ? new Date(t.default_date) : null, u = t.unavailable_dates ? d.map(t.unavailable_dates, function(t) {
						return t
					}) : [], s && (n.attr("value", ""), n.trigger("change"), n.removeClass("hasDatepicker"), n.datepicker("destroy")), n.datepicker({
						minDate: new Date(t.calendar_start),
						maxDate: new Date(t.calendar_end),
						altField: "#" + e.attr("id"),
						altFormat: "yy-mm-dd",
						dateFormat: f.date_format,
						defaultDate: c || null,
						firstDay: f.start_of_week,
						monthNames: f.month_names,
						dayNamesMin: f.day_initials,
						prevText: "",
						nextText: "",
						beforeShow: function(t, e) {
							return d(e.dpDiv).addClass("pickup-location-appointment-datepicker")
						},
						beforeShowDay: function(t) {
							var e;
							return e = d.datepicker.formatDate("yy-mm-dd", t), [-1 === u.indexOf(e)]
						},
						onSelect: function() {
							var t, e, a, i, c;
							if (t = d("#wc-local-pickup-plus-datepicker-" + l), e = d("#wc-local-pickup-plus-pickup-date-" + l), c = e.val(), p = t.data("location-id"), (i = t.val()) && c && new Date(c)) return n.attr("value", i), a = {
								action: "wc_local_pickup_plus_set_package_handling",
								security: f.set_package_handling_nonce,
								pickup_date: c,
								package_id: l,
								pickup_location_id: p
							}, d.post(f.ajax_url, a, function(t) {
								return t.success || console.log(t), a = {
									action: "wc_local_pickup_plus_get_pickup_location_opening_hours_list",
									security: f.get_pickup_location_opening_hours_list_nonce,
									location: p,
									date: c
								}, d.post(f.ajax_url, a, function(t) {
									var e;
									if ((e = o.find(".pickup-location-schedule")).empty(), t && t.success) return e.append(t.data), d(document.body).trigger("update_checkout")
								})
							})
						}
					}), r = (a = n.val()) && "" !== a ? d.datepicker.parseDate("yy-mm-dd", a) : null) return n.datepicker("setDate", r)
			}, (t = d(".pickup-location-appointment")) && t.each(function() {
				var e, t, a;
				return t = (e = d(this)).find("input.pickup-location-appointment-date").data("location-id"), a = {
					action: "wc_local_pickup_plus_get_pickup_location_appointment_data",
					security: f.get_pickup_location_appointment_data_nonce,
					location: t
				}, d.post(f.ajax_url, a, function(t) {
					if (t.success) return i(e, t.data)
				})
			}), p(), a(), c(), o(), r(), d("#order_review").find("> p.woocommerce-shipping-contents").remove()
		}), d("#order_review").find("> p.woocommerce-shipping-contents").remove(), d(document.body).on("updated_cart_totals", function() {
			return p(), a(), c(), o()
		})
	})
}).call(void 0);